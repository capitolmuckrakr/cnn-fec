# Generated by Django 2.1.5 on 2019-01-23 18:22

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('cycle_2020', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL(
            sql="\n            CREATE TRIGGER contribution_name_update_trigger\n            BEFORE INSERT OR UPDATE OF contributor_organization_name, contributor_first_name, contributor_middle_name, contributor_last_name, name_search\n            ON cycle_2020_schedulea\n            FOR EACH ROW EXECUTE PROCEDURE\n            tsvector_update_trigger(\n              name_search, 'pg_catalog.english', contributor_organization_name, contributor_first_name, contributor_middle_name, contributor_last_name);\n\n            UPDATE cycle_2020_schedulea SET name_search = NULL;\n            ",
            reverse_sql='\n            DROP TRIGGER IF EXISTS contribution_name_update_trigger\n            ON cycle_2020_schedulea;\n            ',
        ),
        migrations.RunSQL(
            sql="\n            CREATE TRIGGER contribution_occupation_update_trigger\n            BEFORE INSERT OR UPDATE OF contributor_occupation, contributor_employer, occupation_search\n            ON cycle_2020_schedulea\n            FOR EACH ROW EXECUTE PROCEDURE\n            tsvector_update_trigger(\n              occupation_search, 'pg_catalog.english', contributor_occupation, contributor_employer);\n\n            UPDATE cycle_2020_schedulea SET occupation_search = NULL;\n            ",
            reverse_sql='\n            DROP TRIGGER IF EXISTS contribution_occupation_update_trigger\n            ON cycle_2020_schedulea;\n            ',
        ),
        migrations.RunSQL(
            sql="\n            CREATE TRIGGER committee_name_update_trigger\n            BEFORE INSERT OR UPDATE OF committee_name, fec_id, name_search\n            ON cycle_2020_committee\n            FOR EACH ROW EXECUTE PROCEDURE\n            tsvector_update_trigger(\n              name_search, 'pg_catalog.english', fec_id, committee_name);\n\n            UPDATE cycle_2020_committee SET name_search = NULL;\n            ",
            reverse_sql='\n            DROP TRIGGER IF EXISTS committee_name_update_trigger\n            ON cycle_2020_committee;\n            ',
        ),
        migrations.RunSQL(
            sql="\n            CREATE TRIGGER expenditure_name_update_trigger\n            BEFORE INSERT OR UPDATE OF payee_organization_name, payee_first_name, payee_middle_name, payee_last_name, name_search\n            ON cycle_2020_scheduleb\n            FOR EACH ROW EXECUTE PROCEDURE\n            tsvector_update_trigger(\n              name_search, 'pg_catalog.english', payee_organization_name, payee_first_name, payee_middle_name, payee_last_name);\n\n            UPDATE cycle_2020_scheduleb SET name_search = NULL;\n            ",
            reverse_sql='\n            DROP TRIGGER IF EXISTS expenditure_name_update_trigger\n            ON cycle_2020_scheduleb;\n            ',
        ),
        migrations.RunSQL(
            sql="\n            CREATE TRIGGER expenditure_purpose_update_trigger\n            BEFORE INSERT OR UPDATE OF expenditure_purpose_descrip, purpose_search\n            ON cycle_2020_scheduleb\n            FOR EACH ROW EXECUTE PROCEDURE\n            tsvector_update_trigger(\n              purpose_search, 'pg_catalog.english', expenditure_purpose_descrip);\n\n            UPDATE cycle_2020_scheduleb SET purpose_search = NULL;\n            ",
            reverse_sql='\n            DROP TRIGGER IF EXISTS expenditure_purpose_update_trigger\n            ON cycle_2020_scheduleb;\n            ',
        ),
        migrations.RunSQL(
            sql="\n            CREATE TRIGGER ie_name_update_trigger\n            BEFORE INSERT OR UPDATE OF payee_organization_name,payee_first_name, payee_middle_name, payee_last_name, name_search\n            ON cycle_2020_schedulee\n            FOR EACH ROW EXECUTE PROCEDURE\n            tsvector_update_trigger(\n              name_search, 'pg_catalog.english', payee_organization_name, payee_first_name, payee_middle_name, payee_last_name);\n\n            UPDATE cycle_2020_schedulee SET name_search = NULL;\n            ",
            reverse_sql='\n            DROP TRIGGER IF EXISTS ie_name_update_trigger\n            ON cycle_2020_schedulee;\n            ',
        ),
        migrations.RunSQL(
            sql="\n            CREATE TRIGGER ie_purpose_update_trigger\n            BEFORE INSERT OR UPDATE OF expenditure_purpose_descrip, purpose_search\n            ON cycle_2020_schedulee\n            FOR EACH ROW EXECUTE PROCEDURE\n            tsvector_update_trigger(\n              purpose_search, 'pg_catalog.english', expenditure_purpose_descrip);\n\n            UPDATE cycle_2020_schedulee SET purpose_search = NULL;\n            ",
            reverse_sql='\n            DROP TRIGGER IF EXISTS ie_purpose_update_trigger\n            ON cycle_2020_schedulee;\n            ',
        ),
        migrations.RunSQL(
            sql="\n            CREATE TRIGGER ie_candidate_update_trigger\n            BEFORE INSERT OR UPDATE OF candidate_first_name, candidate_middle_name, candidate_last_name, candidate_search\n            ON cycle_2020_schedulee\n            FOR EACH ROW EXECUTE PROCEDURE\n            tsvector_update_trigger(\n              candidate_search, 'pg_catalog.english', candidate_first_name, candidate_middle_name, candidate_last_name);\n\n            UPDATE cycle_2020_schedulee SET candidate_search = NULL;\n            ",
            reverse_sql='\n            DROP TRIGGER IF EXISTS ie_candidate_update_trigger\n            ON cycle_2020_schedulee;\n            ',
        ),
        migrations.RunSQL(
            sql="\n            CREATE TRIGGER contribution_address_update_trigger\n            BEFORE INSERT OR UPDATE OF contributor_street_1, contributor_street_2, contributor_city, contributor_zip, address_search\n            ON cycle_2020_schedulea\n            FOR EACH ROW EXECUTE PROCEDURE\n            tsvector_update_trigger(\n              address_search, 'pg_catalog.english', contributor_street_1, contributor_street_2, contributor_city, contributor_zip);\n\n            UPDATE cycle_2020_schedulea SET address_search = NULL;\n            ",
            reverse_sql='\n            DROP TRIGGER IF EXISTS contribution_address_update_trigger\n            ON cycle_2020_schedulea;\n            ',
        ),
        migrations.RunSQL(
            sql="\n            CREATE TRIGGER expenditure_address_update_trigger\n            BEFORE INSERT OR UPDATE OF payee_street_1, payee_street_2, payee_city, payee_zip, address_search\n            ON cycle_2020_scheduleb\n            FOR EACH ROW EXECUTE PROCEDURE\n            tsvector_update_trigger(\n              address_search, 'pg_catalog.english', payee_street_1, payee_street_2, payee_city, payee_zip);\n\n            UPDATE cycle_2020_scheduleb SET address_search = NULL;\n            ",
            reverse_sql='\n            DROP TRIGGER IF EXISTS expenditure_address_update_trigger\n            ON cycle_2020_scheduleb;\n            ',
        ),
    ]